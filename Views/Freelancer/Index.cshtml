@using Freelance.Models
@model Freelance.Models.ViewModels.HomeViewModel
@{

    ViewBag.Title = "Home Page";
    DataBaseConnection check = new DataBaseConnection();

    int userID = check.GetUserID(User.Identity.Name);


}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
<div style="margin-top:50px">
    @using (Html.BeginForm("SearchForJob", "Freelancer", FormMethod.Get,new { @class="d-flex" }))
    {

       
        <input class="form-control mr-sm-2" name="SearchByJobName" type="search" placeholder="Search By Job Name" aria-label="Search">
        <input class="form-control" name="SearchByJobDate" type="date" id="date-input">
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    }


    <br />
    <h2>Jobs Available</h2>
    <hr />
    @if (Model.posts.Count == 0)
    {
        <h2>No Jobs Available</h2>


    }
    else
    {
        foreach (var item in Model.posts)
        {
            <div class="container" style=" border-radius: 3px; padding: 5px;">
                <div class=" d-flex justify-content-between">
                    <div>
                        <h3 style="display:inline">@Html.DisplayFor(modelItem => item.JobTitle)</h3>
                        <div class="d-flex mt-1">
                            <div>
                                <h6>@Html.DisplayFor(modelItem => item.JobType)&nbsp;|&nbsp;</h6>
                            </div>
                            <div>
                                <h6>@Html.DisplayFor(modelItem => item.JobBudget)$</h6>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex flex-row-reverse mb-2">
                        @using (Html.BeginForm("SaveJob", "Freelancer", FormMethod.Post))
                        {

                            @Html.AntiForgeryToken()

                            @Html.Hidden("JobId", (int)item.Id)
                            @Html.Hidden("FreelancerId", (int)userID)
                            <button type="submit" class="btn btn-link text-reset text-decoration-none fa fa-bookmark"></button>
                        }
                    </div>
                </div>
                <div class="ms-5 mt-2 w-75">
                    <h5 class="text-break">
                        @Html.DisplayFor(modelItem => item.JobDes)
                    </h5>
                </div>
                <div class="d-flex justify-content-between">
                    <div class="d-inline-flex mt-2">
                        <h5>Publish Date :&nbsp;</h5>
                       
                        <p>@Html.DisplayFor(modelItem => item.JobDate)</p>
                    </div>
                    <div class="d-flex">
                        <div class="me-2 mt-1">
                            <h5 style="display:inline">People Applied : </h5>
                            <div style="display:inline">@Html.DisplayFor(modelItem => item.PropNum)</div>
                        </div>
                        <div>
                            @using (Html.BeginForm("ApplyForJob", "Freelancer", FormMethod.Post))
                            {

                                @Html.AntiForgeryToken()

                                @Html.Hidden("JobId", (int)item.Id)
                                @Html.Hidden("FreelancerId", (int)userID)
                                <button type="submit" class="btn btn-success">Apply</button>
                            }
                        </div>
                    </div>
                </div>
                <hr />
            </div>

        }
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}